{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","text","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,UACI,6CACA,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAAW,SAACP,GAAD,OAnBG,SAAEA,GACxBF,EAAeE,EAAEQ,OAAOF,OAkBEG,CAAkBT,U,+BCvBvCU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,8DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA2Bf,mBAAS,CAChCsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAK,SAAAC,GAGFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAGGqB,EDrB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,6BAAMpB,IACLoB,GAAW,4CACZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAEC,GACV,OAAO,cAAC,EAAD,eAEUA,GADCA,EAAIC,aEZjCgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEHA,SAAWA,GADLA,YClBlC6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.f06923a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>AddCategory</h2>\r\n            <input\r\n                text=\"text\"\r\n                value={ inputValue }\r\n                onChange={ (e) => handleInputChange(e) }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=4&api_key=FB4vQAnljYQKXFTPFMAcfwa4htemG6B2`\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    // console.log( id, title, url )\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( img ) => {\r\n                        return <GifGridItem \r\n                                    key={ img.id }\r\n                                    { ...img } \r\n                                />\r\n                    } )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] =  useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            \r\n            // console.log(imgs)\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        \r\n        })\r\n        \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One punch man']);\r\n    \r\n    // const handdleAdd = () => {\r\n    //     // setCategories( categories.concat( 'HunterXHunter' ) );\r\n    //     setCategories(cats => [...cats,'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2> \r\n            <AddCategory setCategories={ setCategories } /> \r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                            />\r\n                    }\r\n\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}